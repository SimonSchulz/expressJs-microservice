stages:
  - sonar
  - build
  - deploy
  - cleanup

variables:
  PROJECT: $CI_PROJECT_NAME
  PORT: 3002
  DOCKER_BUILDKIT: 1
  TRANSFER_METER_FREQUENCY: "2s"
  GIT_DEPTH: 0

sonar:
  stage: sonar
  image: sonarsource/sonar-scanner-cli:4.8
  before_script:
    - apk add --update npm
    - npm install
  script:
    - CI=true && npm run test -- --coverage || true
    - /usr/bin/entrypoint.sh sonar-scanner -Dproject.settings=sonar-project.properties
      -Dsonar.projectKey=$PROJECT-$CI_COMMIT_BRANCH
      -Dsonar.projectName=$PROJECT-$CI_COMMIT_BRANCH
      -Dsonar.projectVersion=1.0
      -Dsonar.links.ci=$CI_PIPELINE_URL
      -Dsonar.login=$SONAR_LOGIN
      -Dsonar.host.url=$SONAR_HOST_URL
      -Dsonar.javascript.coveragePlugin=lcov
      -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
      -Dsonar.sources=./src
      -Dsonar.sourceEncoding=UTF-8
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    when: always
    paths:
      - $CI_PROJECT_DIR/coverage/*
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "test"
    - if: $CI_COMMIT_BRANCH == "dev"


kaniko-build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${AND_DOCKER_REGISTRY_NAME}\":{\"auth\":\"$(printf "%s:%s" "${AND_REGESTRY_USER_RW}" "${AND_DOCKER_REGISTRY_RW_PASS}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/CI-CD/Dockerfile"
      --destination "${AND_DOCKER_REGISTRY_NAME}/${PROJECT}:${CI_COMMIT_BRANCH}"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "test"
    - if: $CI_COMMIT_BRANCH == "dev"

kaniko-build-mr:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${AND_DOCKER_REGISTRY_NAME}\":{\"auth\":\"$(printf "%s:%s" "${AND_REGESTRY_USER_RW}" "${AND_DOCKER_REGISTRY_RW_PASS}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/CI-CD/Dockerfile"
      --no-push
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

deploy:
  stage: deploy
  environment:
    name: $CI_COMMIT_BRANCH
  tags:
    - shell-$CI_COMMIT_BRANCH
  variables:
    COMPOSE_PROJECT_NAME: $PROJECT
  before_script:
    - echo "$AND_DOCKER_REGISTRY_RO_PASS" | docker login -u nexus-ro "$AND_DOCKER_REGISTRY" --password-stdin
  script:
    - docker stop $PROJECT-$CI_COMMIT_BRANCH || true
    - docker rm $PROJECT-$CI_COMMIT_BRANCH || true
    - docker rmi -f $AND_DOCKER_REGISTRY_NAME/$PROJECT:$CI_COMMIT_BRANCH  || true
    - docker-compose -f CI-CD/docker-compose.yaml pull
    - docker-compose -f CI-CD/docker-compose.yaml up --force-recreate -d
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "test"
    - if: $CI_COMMIT_BRANCH == "dev"

cleanup:
  stage: cleanup
  tags:
    - shell-$CI_COMMIT_BRANCH
  script:
     - docker system prune -f --filter "label!=keep"
  when: always
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "test"
    - if: $CI_COMMIT_BRANCH == "dev"
